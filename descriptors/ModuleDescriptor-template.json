{
  "id": "${artifactId}-${version}",
  "name": "Circulation Storage Module",
  "requires": [
    {
      "id": "item-storage",
      "version": "5.0 6.0 7.0 8.2 9.0 10.0"
    },
    {
      "id": "holdings-storage",
      "version": "1.3 2.0 3.0 4.0 5.0 6.0"
    },
    {
      "id": "pubsub-event-types",
      "version": "0.1"
    },
    {
      "id": "pubsub-publishers",
      "version": "0.1"
    },
    {
      "id": "pubsub-subscribers",
      "version": "0.1"
    },
    {
      "id": "pubsub-publish",
      "version": "0.1"
    }
  ],
  "provides": [
    {
      "id": "request-storage-batch",
      "version": "2.0",
      "handlers": [
        {
          "methods": ["POST"],
          "pathPattern": "/request-storage-batch/requests",
          "permissionsRequired": ["circulation-storage.request-batch.item.post"]
        }
      ]
    },
    {
      "id": "loan-storage",
      "version": "7.1",
      "handlers": [
        {
          "methods": ["GET"],
          "pathPattern": "/loan-storage/loans",
          "permissionsRequired": ["circulation-storage.loans.collection.get"]
        }, {
          "methods": ["GET"],
          "pathPattern": "/loan-storage/loans/{id}",
          "permissionsRequired": ["circulation-storage.loans.item.get"]
        }, {
          "methods": ["POST"],
          "pathPattern": "/loan-storage/loans",
          "permissionsRequired": ["circulation-storage.loans.item.post"]
        }, {
          "methods": ["PUT"],
          "pathPattern": "/loan-storage/loans/{id}",
          "permissionsRequired": ["circulation-storage.loans.item.put"]
        }, {
          "methods": ["DELETE"],
          "pathPattern": "/loan-storage/loans/{id}",
          "permissionsRequired": ["circulation-storage.loans.item.delete"]
        }, {
          "methods": ["DELETE"],
          "pathPattern": "/loan-storage/loans",
          "permissionsRequired": ["circulation-storage.loans.collection.delete"]
        }, {
          "methods": ["GET"],
          "pathPattern": "/loan-storage/loan-history",
          "permissionsRequired": ["circulation-storage.loans-history.collection.get"]
        }, {
          "methods": ["POST"],
          "pathPattern": "/loan-storage/loans/anonymize/{userId}",
          "permissionsRequired": ["circulation-storage.loans.collection.anonymize.user.post"]
        }
      ]
    },
    {
      "id": "anonymize-storage-loans",
      "version": "0.1",
      "handlers": [
        {
          "methods": ["POST"],
          "pathPattern": "/anonymize-storage-loans",
          "permissionsRequired": ["anonymize-storage-loans.post"]
        }
      ]
    },
    {
      "id": "circulation-rules-storage",
      "version": "1.0",
      "handlers": [
        {
          "methods": ["GET"],
          "pathPattern": "/circulation-rules-storage",
          "permissionsRequired": ["circulation-storage.circulation-rules.get"]
        }, {
          "methods": ["PUT"],
          "pathPattern": "/circulation-rules-storage",
          "permissionsRequired": ["circulation-storage.circulation-rules.put"]
        }
      ]
    },
    {
      "id": "loan-policy-storage",
      "version": "2.3",
      "handlers": [
        {
          "methods": ["GET"],
          "pathPattern": "/loan-policy-storage/loan-policies",
          "permissionsRequired": ["circulation-storage.loan-policies.collection.get"]
        }, {
          "methods": ["GET"],
          "pathPattern": "/loan-policy-storage/loan-policies/{id}",
          "permissionsRequired": ["circulation-storage.loan-policies.item.get"]
        }, {
          "methods": ["POST"],
          "pathPattern": "/loan-policy-storage/loan-policies",
          "permissionsRequired": ["circulation-storage.loan-policies.item.post"]
        }, {
          "methods": ["PUT"],
          "pathPattern": "/loan-policy-storage/loan-policies/{id}",
          "permissionsRequired": ["circulation-storage.loan-policies.item.put"]
        }, {
          "methods": ["DELETE"],
          "pathPattern": "/loan-policy-storage/loan-policies/{id}",
          "permissionsRequired": ["circulation-storage.loan-policies.item.delete"]
        }, {
          "methods": ["DELETE"],
          "pathPattern": "/loan-policy-storage/loan-policies",
          "permissionsRequired": ["circulation-storage.loan-policies.collection.delete"]
        }
      ]
    },
    {
      "id": "request-storage",
      "version": "6.0",
      "handlers": [
        {
          "methods": ["GET"],
          "pathPattern": "/request-storage/requests",
          "permissionsRequired": ["circulation-storage.requests.collection.get"]
        }, {
          "methods": ["GET"],
          "pathPattern": "/request-storage/requests/{id}",
          "permissionsRequired": ["circulation-storage.requests.item.get"]
        }, {
          "methods": ["POST"],
          "pathPattern": "/request-storage/requests",
          "permissionsRequired": ["circulation-storage.requests.item.post"]
        }, {
          "methods": ["PUT"],
          "pathPattern": "/request-storage/requests/{id}",
          "permissionsRequired": ["circulation-storage.requests.item.put"]
        }, {
          "methods": ["DELETE"],
          "pathPattern": "/request-storage/requests/{id}",
          "permissionsRequired": ["circulation-storage.requests.item.delete"]
        }, {
          "methods": ["DELETE"],
          "pathPattern": "/request-storage/requests",
          "permissionsRequired": ["circulation-storage.requests.collection.delete"]
        }
      ]
    },
    {
      "id": "fixed-due-date-schedules-storage",
      "version": "2.0",
      "handlers": [
        {
          "methods": ["GET"],
          "pathPattern": "/fixed-due-date-schedule-storage/fixed-due-date-schedules",
          "permissionsRequired": ["circulation-storage.fixed-due-date-schedules.collection.get"]
        }, {
          "methods": ["GET"],
          "pathPattern": "/fixed-due-date-schedule-storage/fixed-due-date-schedules/{id}",
          "permissionsRequired": ["circulation-storage.fixed-due-date-schedules.item.get"]
        }, {
          "methods": ["POST"],
          "pathPattern": "/fixed-due-date-schedule-storage/fixed-due-date-schedules",
          "permissionsRequired": ["circulation-storage.fixed-due-date-schedules.item.post"]
        }, {
          "methods": ["PUT"],
          "pathPattern": "/fixed-due-date-schedule-storage/fixed-due-date-schedules/{id}",
          "permissionsRequired": ["circulation-storage.fixed-due-date-schedules.item.put"]
        }, {
          "methods": ["DELETE"],
          "pathPattern": "/fixed-due-date-schedule-storage/fixed-due-date-schedules/{id}",
          "permissionsRequired": ["circulation-storage.fixed-due-date-schedules.item.delete"]
        }, {
          "methods": ["DELETE"],
          "pathPattern": "/fixed-due-date-schedule-storage/fixed-due-date-schedules",
          "permissionsRequired": ["circulation-storage.fixed-due-date-schedules.collection.delete"]
        }
      ]
    },
    {
      "id": "staff-slips-storage",
      "version": "1.0",
      "handlers": [
        {
          "methods": ["GET"],
          "pathPattern": "/staff-slips-storage/staff-slips",
          "permissionsRequired": ["circulation-storage.staff-slips.collection.get"]
        },
        {
          "methods": ["POST"],
          "pathPattern": "/staff-slips-storage/staff-slips",
          "permissionsRequired": ["circulation-storage.staff-slips.item.post"]
        },
        {
          "methods": ["DELETE"],
          "pathPattern": "/staff-slips-storage/staff-slips",
          "permissionsRequired": ["circulation-storage.staff-slips.collection.delete"]
        },
        {
          "methods": ["GET"],
          "pathPattern": "/staff-slips-storage/staff-slips/{id}",
          "permissionsRequired": ["circulation-storage.staff-slips.item.get"]
        },
        {
          "methods": ["PUT"],
          "pathPattern": "/staff-slips-storage/staff-slips/{id}",
          "permissionsRequired": ["circulation-storage.staff-slips.item.put"]
        },
        {
          "methods": ["DELETE"],
          "pathPattern": "/staff-slips-storage/staff-slips/{id}",
          "permissionsRequired": ["circulation-storage.staff-slips.item.delete"]
        }
      ]
    },
    {
      "id" : "cancellation-reason-storage",
      "version": "1.2",
      "handlers": [
        {
          "methods": ["GET"],
          "pathPattern": "/cancellation-reason-storage/cancellation-reasons",
          "permissionsRequired": ["circulation-storage.cancellation-reasons.collection.get"]
        },
        {
          "methods": ["GET"],
          "pathPattern": "/cancellation-reason-storage/cancellation-reasons/{id}",
          "permissionsRequired": ["circulation-storage.cancellation-reasons.item.get"]
        },
        {
          "methods": ["POST"],
          "pathPattern": "/cancellation-reason-storage/cancellation-reasons",
          "permissionsRequired": ["circulation-storage.cancellation-reasons.item.post"]
        },
        {
          "methods": ["PUT"],
          "pathPattern": "/cancellation-reason-storage/cancellation-reasons/{id}",
          "permissionsRequired": ["circulation-storage.cancellation-reasons.item.put"]
        },
        {
          "methods": ["DELETE"],
          "pathPattern": "/cancellation-reason-storage/cancellation-reasons",
          "permissionsRequired": ["circulation-storage.cancellation-reasons.collection.delete"]
        },
        {
          "methods": ["DELETE"],
          "pathPattern": "/cancellation-reason-storage/cancellation-reasons/{id}",
          "permissionsRequired": ["circulation-storage.cancellation-reasons.item.delete"]
        }
      ]
    },
    {
      "id": "patron-notice-policy-storage",
      "version": "0.13",
      "handlers": [
        {
          "methods": ["POST"],
          "pathPattern": "/patron-notice-policy-storage/patron-notice-policies",
          "permissionsRequired": ["circulation-storage.patron-notice-policies.item.post"]
        },
        {
          "methods": ["PUT"],
          "pathPattern": "/patron-notice-policy-storage/patron-notice-policies/{id}",
          "permissionsRequired": ["circulation-storage.patron-notice-policies.item.put"]
        },
        {
          "methods": ["DELETE"],
          "pathPattern": "/patron-notice-policy-storage/patron-notice-policies/{id}",
          "permissionsRequired": ["circulation-storage.patron-notice-policies.item.delete"]
        },
        {
          "methods": ["GET"],
          "pathPattern": "/patron-notice-policy-storage/patron-notice-policies",
          "permissionsRequired": ["circulation-storage.patron-notice-policies.collection.get"]
        },
        {
          "methods": ["GET"],
          "pathPattern": "/patron-notice-policy-storage/patron-notice-policies/{id}",
          "permissionsRequired": ["circulation-storage.patron-notice-policies.item.get"]
        }
      ]
    },
    {
      "id": "request-policy-storage",
      "version": "1.0",
      "handlers": [
        {
          "methods": ["GET"],
          "pathPattern": "/request-policy-storage/request-policies",
          "permissionsRequired": ["circulation-storage.request-policies.collection.get"]
        }, {
          "methods": ["GET"],
          "pathPattern": "/request-policy-storage/request-policies/{id}",
          "permissionsRequired": ["circulation-storage.request-policies.item.get"]
        }, {
          "methods": ["POST"],
          "pathPattern": "/request-policy-storage/request-policies",
          "modulePermissions": [
            "inventory-storage.service-points.item.get",
            "inventory-storage.service-points.collection.get"
          ],
          "permissionsRequired": ["circulation-storage.request-policies.item.post"]
        }, {
          "methods": ["PUT"],
          "pathPattern": "/request-policy-storage/request-policies/{id}",
          "modulePermissions": [
            "inventory-storage.service-points.item.get",
            "inventory-storage.service-points.collection.get"
          ],
          "permissionsRequired": ["circulation-storage.request-policies.item.put"]
        }, {
          "methods": ["DELETE"],
          "pathPattern": "/request-policy-storage/request-policies/{id}",
          "permissionsRequired": ["circulation-storage.request-policies.item.delete"]
        }, {
          "methods": ["DELETE"],
          "pathPattern": "/request-policy-storage/request-policies",
          "permissionsRequired": ["circulation-storage.request-policies.collection.delete"]
        }
      ]
    },
    {
      "id": "actual-cost-record-storage",
      "version": "0.8",
      "handlers": [
        {
          "methods": ["GET"],
          "pathPattern": "/actual-cost-record-storage/actual-cost-records",
          "permissionsRequired": ["actual-cost-record-storage.actual-cost-records.collection.get"]
        },
        {
          "methods": ["GET"],
          "pathPattern": "/actual-cost-record-storage/actual-cost-records/{id}",
          "permissionsRequired": ["actual-cost-record-storage.actual-cost-records.item.get"]
        },
        {
          "methods": ["POST"],
          "pathPattern": "/actual-cost-record-storage/actual-cost-records",
          "permissionsRequired": ["actual-cost-record-storage.actual-cost-records.item.post"]
        },
        {
          "methods": ["PUT"],
          "pathPattern": "/actual-cost-record-storage/actual-cost-records/{id}",
          "permissionsRequired": ["actual-cost-record-storage.actual-cost-records.item.put"]
        },
        {
          "methods": ["DELETE"],
          "pathPattern": "/actual-cost-record-storage/actual-cost-records/{id}",
          "permissionsRequired": ["actual-cost-record-storage.actual-cost-records.item.delete"]
        }
      ]
    },
    {
      "id": "request-preference-storage",
      "version": "2.0",
      "handlers": [
        {
          "methods": ["POST"],
          "pathPattern": "/request-preference-storage/request-preference",
          "permissionsRequired": ["circulation-storage.request-preferences.item.post"]
        },
        {
          "methods": ["PUT"],
          "pathPattern": "/request-preference-storage/request-preference/{id}",
          "permissionsRequired": ["circulation-storage.request-preferences.item.put"]
        },
        {
          "methods": ["DELETE"],
          "pathPattern": "/request-preference-storage/request-preference/{id}",
          "permissionsRequired": ["circulation-storage.request-preferences.item.delete"]
        },
        {
          "methods": ["GET"],
          "pathPattern": "/request-preference-storage/request-preference",
          "permissionsRequired": ["circulation-storage.request-preferences.collection.get"]
        },
        {
          "methods": ["GET"],
          "pathPattern": "/request-preference-storage/request-preference/{id}",
          "permissionsRequired": ["circulation-storage.request-preferences.item.get"]
        }
      ]
    },
    {
      "id": "scheduled-notice-storage",
      "version": "0.6",
      "handlers": [
        {
          "methods": ["GET"],
          "pathPattern": "/scheduled-notice-storage/scheduled-notices",
          "permissionsRequired": ["scheduled-notice-storage.scheduled-notices.collection.get"]
        },
        {
          "methods": ["GET"],
          "pathPattern": "/scheduled-notice-storage/scheduled-notices/{id}",
          "permissionsRequired": ["scheduled-notice-storage.scheduled-notices.item.get"]
        },
        {
          "methods": ["POST"],
          "pathPattern": "/scheduled-notice-storage/scheduled-notices",
          "permissionsRequired": ["scheduled-notice-storage.scheduled-notices.item.post"]
        },
        {
          "methods": ["PUT"],
          "pathPattern": "/scheduled-notice-storage/scheduled-notices/{id}",
          "permissionsRequired": ["scheduled-notice-storage.scheduled-notices.item.put"]
        },
        {
          "methods": ["DELETE"],
          "pathPattern": "/scheduled-notice-storage/scheduled-notices",
          "permissionsRequired": ["scheduled-notice-storage.scheduled-notices.collection.delete"]
        },
        {
          "methods": ["DELETE"],
          "pathPattern": "/scheduled-notice-storage/scheduled-notices/{id}",
          "permissionsRequired": ["scheduled-notice-storage.scheduled-notices.item.delete"]
        }
      ]
    },
    {
      "id": "tlr-feature-toggle-job-storage",
      "version": "0.1",
      "handlers": [
        {
          "methods":[
            "POST"
          ],
          "pathPattern":"/tlr-feature-toggle-job-storage/tlr-feature-toggle-jobs",
          "permissionsRequired": [
            "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.post"
          ]
        },
        {
          "methods":[
            "GET"
          ],
          "pathPattern":"/tlr-feature-toggle-job-storage/tlr-feature-toggle-jobs",
          "permissionsRequired": [
            "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.collection.get"
          ]
        },
        {
          "methods":[
            "GET"
          ],
          "pathPattern":"/tlr-feature-toggle-job-storage/tlr-feature-toggle-jobs/{id}",
          "permissionsRequired": [
            "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.get"
          ]
        },
        {
          "methods":[
            "PUT"
          ],
          "pathPattern":"/tlr-feature-toggle-job-storage/tlr-feature-toggle-jobs/{id}",
          "permissionsRequired": [
            "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.put"
          ]
        },
        {
          "methods":[
            "DELETE"
          ],
          "pathPattern":"/tlr-feature-toggle-job-storage/tlr-feature-toggle-jobs/{id}",
          "permissionsRequired": [
            "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.delete"
          ]
        }
      ]
    },
    {
      "id": "_tenant",
      "version": "2.0",
      "interfaceType": "system",
      "handlers": [
        {
          "methods": ["POST"],
          "pathPattern": "/_/tenant",
          "modulePermissions": [
            "pubsub.event-types.post",
            "pubsub.publishers.post",
            "pubsub.subscribers.post",
            "inventory-storage.holdings.item.get",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.items.item.get",
            "inventory-storage.items.collection.get",
            "inventory-storage.service-points.item.get",
            "inventory-storage.service-points.collection.get"
          ]
        }, {
          "methods": ["GET", "DELETE"],
          "pathPattern": "/_/tenant/{id}"
        }
      ]
    },
    {
      "id": "patron-action-session-storage",
      "version": "0.3",
      "handlers": [
        {
          "methods": ["GET"],
          "pathPattern": "/patron-action-session-storage/patron-action-sessions",
          "permissionsRequired": ["patron-action-session-storage.patron-action-sessions.collection.get"]
        }, {
          "methods": ["GET"],
          "pathPattern": "/patron-action-session-storage/patron-action-sessions/{id}",
          "permissionsRequired": ["patron-action-session-storage.patron-action-sessions.item.get"]
        }, {
          "methods": ["POST"],
          "pathPattern": "/patron-action-session-storage/patron-action-sessions",
          "permissionsRequired": ["patron-action-session-storage.patron-action-sessions.item.post"]
        }, {
          "methods": ["PUT"],
          "pathPattern": "/patron-action-session-storage/patron-action-sessions/{id}",
          "permissionsRequired": ["patron-action-session-storage.patron-action-sessions.item.put"]
        }, {
          "methods": ["DELETE"],
          "pathPattern": "/patron-action-session-storage/patron-action-sessions/{id}",
          "permissionsRequired": ["patron-action-session-storage.patron-action-sessions.item.delete"]
        }, {
          "methods": ["GET"],
          "pathPattern": "/patron-action-session-storage/expired-session-patron-ids",
          "permissionsRequired": ["patron-action-session-storage.expired-session-patron-ids.collection.get"]
        }
      ]
    },
    {
      "id": "check-in-storage",
      "version": "0.2",
      "handlers": [
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/check-in-storage/check-ins",
          "permissionsRequired": [
            "check-in-storage.check-ins.collection.get"
          ]
        },
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/check-in-storage/check-ins",
          "permissionsRequired": [
            "check-in-storage.check-ins.item.post"
          ]
        },
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/check-in-storage/check-ins/{id}",
          "permissionsRequired": [
            "check-in-storage.check-ins.item.get"
          ]
        }
      ]
    },
    {
      "id": "checkout-lock-storage",
      "version": "0.1",
      "handlers": [
        {
          "methods": ["GET"],
          "pathPattern": "/check-out-lock-storage",
          "permissionsRequired": ["checkout-lock-storage.checkout-locks.collection.get"]
        },
        {
          "methods": ["GET"],
          "pathPattern": "/check-out-lock-storage/{lockId}",
          "permissionsRequired": ["checkout-lock-storage.checkout-locks.item.get"]
        },
        {
          "methods": ["POST"],
          "pathPattern": "/check-out-lock-storage",
          "permissionsRequired": ["checkout-lock-storage.checkout-locks.item.post"]
        },
        {
          "methods": ["DELETE"],
          "pathPattern": "/check-out-lock-storage/{lockId}",
          "permissionsRequired": ["checkout-lock-storage.checkout-locks.item.delete"]
        }
      ]
    },
    {
      "id": "_timer",
      "version": "1.0",
      "interfaceType": "system",
      "handlers": [
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/scheduled-request-expiration",
          "modulePermissions": [
            "pubsub.publish.post",
            "configuration.entries.collection.get"
          ],
          "unit": "minute",
          "delay": "2"
        },
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/tlr-feature-toggle-job/start",
          "modulePermissions": [
            "configuration.entries.collection.get"
          ],
          "unit": "minute",
          "delay": "5"
        }
      ]
    }
  ],
  "permissionSets": [
    {
      "permissionName": "check-in-storage.check-ins.collection.get",
      "displayName": "Check-in storage - get check-ins collection",
      "description": "Get check-ins collection from storage"
    },
    {
      "permissionName": "check-in-storage.check-ins.item.post",
      "displayName": "Check-in storage - create a check-in record",
      "description": "Create a check-in record"
    },
    {
      "permissionName": "check-in-storage.check-ins.item.get",
      "displayName": "Check-in storage - get a check-in record by id",
      "description": "Get individual check-in by id"
    },
    {
      "permissionName": "circulation-storage.loans.collection.get",
      "displayName": "Circulation storage - get loan collection",
      "description": "Get loan collection from storage"
    },
    {
      "permissionName": "circulation-storage.loans.collection.delete",
      "displayName": "Circulation storage - delete entire loan collection",
      "description": "Delete entire loan collection from storage"
    },
    {
      "permissionName": "circulation-storage.loans.item.get",
      "displayName": "Circulation storage - get individual loan",
      "description": "Get individual loan from storage"
    },
    {
      "permissionName": "circulation-storage.loans.item.post",
      "displayName": "Circulation storage - create individual loan",
      "description": "Create individual loan in storage"
    },
    {
      "permissionName": "circulation-storage.loans.item.put",
      "displayName": "Circulation storage - modify loan",
      "description": "Modify loan in storage"
    },
    {
      "permissionName": "circulation-storage.loans.item.delete",
      "displayName": "Circulation storage - delete individual loan",
      "description": "Delete individual loan from storage"
    },
    {
      "permissionName": "circulation-storage.loans.collection.anonymize.user.post",
      "displayName": "Circulation storage - anonymize loans for a user",
      "description": "Anonymize closed loans for a single user"
    },
    {
      "permissionName": "anonymize-storage-loans.post",
      "displayName": "circulation - anonymize loans",
      "description": "anonymize a list of loans"
    },
    {
      "permissionName": "circulation-storage.circulation-rules.get",
      "displayName": "Circulation storage - get circulation rules",
      "description": "Get circulation rules from storage"
    },
    {
      "permissionName": "circulation-storage.circulation-rules.put",
      "displayName": "Circulation storage - modify circulation rules",
      "description": "Modify circulation rules in storage"
    },
    {
      "permissionName": "circulation-storage.loan-policies.collection.get",
      "displayName": "Circulation storage - get loan policy collection",
      "description": "Get loan policy collection from storage"
    },
    {
      "permissionName": "circulation-storage.loan-policies.collection.delete",
      "displayName": "Circulation storage - delete entire loan collection",
      "description": "Delete entire loan collection from storage"
    },
    {
      "permissionName": "circulation-storage.loan-policies.item.get",
      "displayName": "Circulation storage - get individual loan policy",
      "description": "Get individual loan policy from storage"
    },
    {
      "permissionName": "circulation-storage.loan-policies.item.post",
      "displayName": "Circulation storage - create individual loan policy",
      "description": "Create individual loan policy in storage"
    },
    {
      "permissionName": "circulation-storage.loan-policies.item.put",
      "displayName": "Circulation storage - modify loan policy",
      "description": "Modify loan policy in storage"
    },
    {
      "permissionName": "circulation-storage.loan-policies.item.delete",
      "displayName": "Circulation storage - delete individual loan policy",
      "description": "Delete individual loan policy from storage"
    },
    {
      "permissionName": "circulation-storage.loans-history.collection.get",
      "displayName": "Circulation storage - get loan history collection",
      "description": "Get loan history collection from storage"
    },
    {
      "permissionName": "circulation-storage.requests.collection.get",
      "displayName": "Circulation storage - get request collection",
      "description": "Get request collection from storage"
    },
    {
      "permissionName": "circulation-storage.requests.collection.delete",
      "displayName": "Circulation storage - delete entire request collection",
      "description": "Delete entire request collection from storage"
    },
    {
      "permissionName": "circulation-storage.requests.item.get",
      "displayName": "Circulation storage - get individual request",
      "description": "Get individual request from storage"
    },
    {
      "permissionName": "circulation-storage.requests.item.post",
      "displayName": "Circulation storage - create individual request",
      "description": "Create individual request in storage"
    },
    {
      "permissionName": "circulation-storage.requests.item.put",
      "displayName": "Circulation storage - modify request",
      "description": "Modify request in storage"
    },
    {
      "permissionName": "circulation-storage.request-batch.item.post",
      "displayName": "Circulation storage batch - modify requests",
      "description": "Modify requests in storage"
    },
    {
      "permissionName": "circulation-storage.requests.item.delete",
      "displayName": "Circulation storage - delete individual request",
      "description": "Delete individual request from storage"
    },
    {
      "permissionName": "circulation-storage.fixed-due-date-schedules.collection.get",
      "displayName": "Circulation storage - get fixed due date collection",
      "description": "Get fixed due date collection from storage"
    },
    {
      "permissionName": "circulation-storage.fixed-due-date-schedules.item.get",
      "displayName": "Circulation storage - get individual fixed due date",
      "description": "Get individual fixed due date from storage"
    },
    {
      "permissionName": "circulation-storage.fixed-due-date-schedules.item.post",
      "displayName": "Circulation storage - create individual fixed due date",
      "description": "Create individual fixed due date from storage"
    },
    {
      "permissionName": "circulation-storage.fixed-due-date-schedules.item.put",
      "displayName": "Circulation storage - modify individual fixed due date",
      "description": "Modify individual fixed due date from storage"
    },
    {
      "permissionName": "circulation-storage.fixed-due-date-schedules.item.delete",
      "displayName": "Circulation storage - delete individual fixed due date",
      "description": "Delete individual fixed due date from storage"
    },
    {
      "permissionName": "circulation-storage.fixed-due-date-schedules.collection.delete",
      "displayName": "Circulation storage - delete collection of fixed due date",
      "description": "Delete collection of fixed due date from storage"
    },
    {
      "permissionName": "circulation-storage.staff-slips.collection.get",
      "displayName": "Circulation storage - get staff slip collection from storage",
      "description": "Get staff slip collection from storage"
    },
    {
      "permissionName": "circulation-storage.staff-slips.collection.delete",
      "displayName": "Circulation storage - delete entire staff slipp collection",
      "description": "Delete entire staff slip collection"
    },
    {
      "permissionName": "circulation-storage.staff-slips.item.post",
      "displayName": "Circulation storage - create indavidual staff slip in storage",
      "description": "Create individual staff slip in storage"
    },
    {
      "permissionName": "circulation-storage.staff-slips.item.get",
      "displayName": "Circulation storage - get indavidual staff slip from storage",
      "description": "Get individual staff slip from storage"
    },
    {
      "permissionName": "circulation-storage.staff-slips.item.delete",
      "displayName": "Circulation storage - delete indavidual staff slip from storage",
      "description": "Delete individual staff slip from storage"
    },
    {
      "permissionName": "circulation-storage.staff-slips.item.put",
      "displayName": "Circulation storage - modify indavidual staff slip in storage",
      "description": "Modify individual staff slip in storage"
    },
    {
      "permissionName": "circulation-storage.cancellation-reasons.collection.get",
      "displayName": "Circulation storage - get cancellation reasons collection",
      "description": "Get cancellation reasons from storage"
    },
    {
      "permissionName": "circulation-storage.cancellation-reasons.item.get",
      "displayName": "Circulation storage - get individual cancellation reason",
      "description": "Get individual cancellation reason by id"
    },
    {
      "permissionName": "circulation-storage.cancellation-reasons.item.post",
      "displayName": "Circulation storage - create individual cancellation reason",
      "description": "Create individual cancellation reason"
    },
    {
      "permissionName": "circulation-storage.cancellation-reasons.item.put",
      "displayName": "Circulation storage - put individual cancellation reason",
      "description": "Modify individual cancellation reason by id"
    },
    {
      "permissionName": "circulation-storage.cancellation-reasons.collection.delete",
      "displayName": "Circulation storage - delete cancellation reasons",
      "description": "Delete entire cancellation reasons collection"
    },
    {
      "permissionName": "circulation-storage.cancellation-reasons.item.delete",
      "displayName": "Circulation storage - delete individual cancellation reason",
      "description": "Delete individual cancellation reason by id"
    },
    {
      "permissionName": "circulation-storage.patron-notice-policies.item.post",
      "displayName": "Circulation storage - post individual patron notice policy",
      "description": "Post individual patron notice policy"
    },
    {
      "permissionName": "circulation-storage.patron-notice-policies.item.put",
      "displayName": "Circulation storage - put individual patron notice policy",
      "description": "Put individual patron notice policy by id"
    },
    {
      "permissionName": "circulation-storage.patron-notice-policies.item.delete",
      "displayName": "Circulation storage - delete patron notice policy",
      "description": "Delete patron notice policy by id"
    },
    {
      "permissionName": "circulation-storage.patron-notice-policies.collection.get",
      "displayName": "Circulation storage - get patron notice policy collection",
      "description": "Get patron notice policy collection from storage"
    },
    {
      "permissionName": "circulation-storage.patron-notice-policies.item.get",
      "displayName": "Circulation storage - get individual patron notice policy",
      "description": "Get individual patron notice policy by id"
    },
    {
      "permissionName": "circulation-storage.request-preferences.item.post",
      "displayName": "Circulation storage - post individual request preference",
      "description": "Post individual request preference"
    },
    {
      "permissionName": "circulation-storage.request-preferences.item.put",
      "displayName": "Circulation storage - put individual request preference",
      "description": "Put individual request preference by id"
    },
    {
      "permissionName": "circulation-storage.request-preferences.item.delete",
      "displayName": "Circulation storage - delete request preference",
      "description": "Delete request preference by id"
    },
    {
      "permissionName": "circulation-storage.request-preferences.collection.get",
      "displayName": "Circulation storage - get request preference collection",
      "description": "Get request preference collection from storage"
    },
    {
      "permissionName": "circulation-storage.request-preferences.item.get",
      "displayName": "Circulation storage - get individual request preference",
      "description": "Get individual request preference by id"
    },
    {
      "permissionName": "scheduled-notice-storage.scheduled-notices.collection.get",
      "displayName": "Circulation storage - get scheduled notice collection",
      "description": "Get scheduled notice collection from storage"
    },
    {
      "permissionName": "scheduled-notice-storage.scheduled-notices.item.get",
      "displayName": "Circulation storage - get individual scheduled notice",
      "description": "Get individual scheduled notice by id"
    },
    {
      "permissionName": "scheduled-notice-storage.scheduled-notices.item.post",
      "displayName": "Circulation storage - post individual scheduled notice",
      "description": "Create individual scheduled notice"
    },
    {
      "permissionName": "scheduled-notice-storage.scheduled-notices.item.put",
      "displayName": "Circulation storage - put individual scheduled notice",
      "description": "Put individual scheduled notice by id"
    },
    {
      "permissionName": "scheduled-notice-storage.scheduled-notices.item.delete",
      "displayName": "Circulation storage - delete individual scheduled notice",
      "description": "Delete individual scheduled notice by id"
    },
    {
      "permissionName": "scheduled-notice-storage.scheduled-notices.collection.delete",
      "displayName": "Circulation storage - delete all scheduled notices",
      "description": "Delete all scheduled notices from storage"
    },
    {
      "permissionName": "patron-action-session-storage.patron-action-sessions.collection.get",
      "displayName": "Circulation storage - get patron action session collection",
      "description": "Get patron action session collection from storage"
    },
    {
      "permissionName": "patron-action-session-storage.patron-action-sessions.item.get",
      "displayName": "Circulation storage - get patron action session",
      "description": "Get individual patron action session by id"
    },
    {
      "permissionName": "patron-action-session-storage.patron-action-sessions.item.post",
      "displayName": "Circulation storage - post patron action session",
      "description": "Create individual patron action session"
    },
    {
      "permissionName": "patron-action-session-storage.patron-action-sessions.item.put",
      "displayName": "Circulation storage - put patron action session",
      "description": "Put patron action session by id"
    },
    {
      "permissionName": "patron-action-session-storage.patron-action-sessions.item.delete",
      "displayName": "Circulation storage - delete patron action session",
      "description": "Delete patron action session by id"
    },
    {
      "permissionName": "patron-action-session-storage.expired-session-patron-ids.collection.get",
      "displayName": "Circulation storage - get expired session patron ids collection",
      "description": "Get expired session patron ids collection from storage"
    },
    {
      "permissionName": "circulation-storage.all",
      "displayName": "Circulation storage module - all permissions",
      "description": "Entire set of permissions needed to use the circulation storage module",
      "subPermissions": [
        "circulation-storage.loans.collection.get",
        "circulation-storage.loans.item.get",
        "circulation-storage.loans.item.post",
        "circulation-storage.loans.item.put",
        "circulation-storage.loans.item.delete",
        "circulation-storage.loans.collection.delete",
        "circulation-storage.loans.collection.anonymize.user.post",
        "circulation-storage.loans-history.collection.get",
        "circulation-storage.circulation-rules.get",
        "circulation-storage.circulation-rules.put",
        "circulation-storage.loan-policies.collection.get",
        "circulation-storage.loan-policies.item.get",
        "circulation-storage.loan-policies.item.post",
        "circulation-storage.loan-policies.item.put",
        "circulation-storage.loan-policies.item.delete",
        "circulation-storage.loan-policies.collection.delete",
        "circulation-storage.requests.collection.get",
        "circulation-storage.requests.item.get",
        "circulation-storage.requests.item.post",
        "circulation-storage.requests.item.put",
        "circulation-storage.requests.item.delete",
        "circulation-storage.requests.collection.delete",
        "circulation-storage.fixed-due-date-schedules.collection.delete",
        "circulation-storage.fixed-due-date-schedules.item.delete",
        "circulation-storage.fixed-due-date-schedules.item.put",
        "circulation-storage.fixed-due-date-schedules.item.post",
        "circulation-storage.fixed-due-date-schedules.item.get",
        "circulation-storage.fixed-due-date-schedules.collection.get",
        "circulation-storage.staff-slips.item.delete",
        "circulation-storage.staff-slips.collection.delete",
        "circulation-storage.staff-slips.collection.get",
        "circulation-storage.staff-slips.item.post",
        "circulation-storage.staff-slips.item.put",
        "circulation-storage.staff-slips.item.get",
        "circulation-storage.cancellation-reasons.collection.get",
        "circulation-storage.cancellation-reasons.item.get",
        "circulation-storage.cancellation-reasons.item.post",
        "circulation-storage.cancellation-reasons.item.put",
        "circulation-storage.cancellation-reasons.collection.delete",
        "circulation-storage.cancellation-reasons.item.delete",
        "circulation-storage.patron-notice-policies.item.post",
        "circulation-storage.patron-notice-policies.item.put",
        "circulation-storage.patron-notice-policies.item.delete",
        "circulation-storage.patron-notice-policies.collection.get",
        "circulation-storage.patron-notice-policies.item.get",
        "circulation-storage.request-preferences.item.post",
        "circulation-storage.request-preferences.item.put",
        "circulation-storage.request-preferences.item.delete",
        "circulation-storage.request-preferences.collection.get",
        "circulation-storage.request-preferences.item.get",
        "circulation-storage.request-policies.collection.get",
        "circulation-storage.request-policies.item.get",
        "circulation-storage.request-policies.collection.delete",
        "circulation-storage.request-policies.item.delete",
        "circulation-storage.request-policies.item.post",
        "circulation-storage.request-policies.item.put",
        "circulation-storage.request-batch.item.post",
        "scheduled-notice-storage.scheduled-notices.collection.get",
        "scheduled-notice-storage.scheduled-notices.item.get",
        "scheduled-notice-storage.scheduled-notices.item.post",
        "scheduled-notice-storage.scheduled-notices.item.put",
        "scheduled-notice-storage.scheduled-notices.item.delete",
        "scheduled-notice-storage.scheduled-notices.collection.delete",
        "anonymize-storage-loans.post",
        "patron-action-session-storage.patron-action-sessions.collection.get",
        "patron-action-session-storage.patron-action-sessions.item.get",
        "patron-action-session-storage.patron-action-sessions.item.post",
        "patron-action-session-storage.patron-action-sessions.item.put",
        "patron-action-session-storage.patron-action-sessions.item.delete",
        "patron-action-session-storage.expired-session-patron-ids.collection.get",
        "check-in-storage.check-ins.collection.get",
        "check-in-storage.check-ins.item.post",
        "check-in-storage.check-ins.item.get",
        "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.post",
        "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.collection.get",
        "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.get",
        "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.put",
        "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.delete",
        "actual-cost-record-storage.actual-cost-records.collection.get",
        "actual-cost-record-storage.actual-cost-records.item.get",
        "actual-cost-record-storage.actual-cost-records.item.post",
        "actual-cost-record-storage.actual-cost-records.item.put",
        "actual-cost-record-storage.actual-cost-records.item.delete",
        "checkout-lock-storage.checkout-locks.item.post",
        "checkout-lock-storage.checkout-locks.item.delete",
        "checkout-lock-storage.checkout-locks.item.get",
        "checkout-lock-storage.checkout-locks.collection.get"
      ]
    },
    {
      "permissionName": "circulation-storage.request-policies.collection.get",
      "displayName": "Circulation storage - get request policy collection",
      "description": "Get request policy collection from storage"
    },
    {
      "permissionName": "circulation-storage.request-policies.collection.delete",
      "displayName": "Circulation storage - delete entire request policy collection",
      "description": "Delete entire request policy collection from storage"
    },
    {
      "permissionName": "circulation-storage.request-policies.item.get",
      "displayName": "Circulation storage - get individual request policy",
      "description": "Get individual request policy from storage"
    },
    {
      "permissionName": "circulation-storage.request-policies.item.post",
      "displayName": "Circulation storage - create individual request policy",
      "description": "Create individual request policy in storage"
    },
    {
      "permissionName": "circulation-storage.request-policies.item.put",
      "displayName": "Circulation storage - modify individual request policy",
      "description": "Modify request policy in storage"
    },
    {
      "permissionName": "circulation-storage.request-policies.item.delete",
      "displayName": "Circulation storage - delete individual request policy",
      "description": "Delete individual request policy from storage"
    },
    {
      "permissionName": "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.post",
      "displayName": "Circulation storage - post tlr feature toggle job",
      "description": "Create tlr feature toggle job"
    },
    {
      "permissionName": "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.collection.get",
      "displayName": "Circulation storage - get tlr feature toggle job collection",
      "description": "Get tlr feature toggle job collection"
    },
    {
      "permissionName": "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.get",
      "displayName": "Circulation storage - get tlr feature toggle job",
      "description": "Get tlr feature toggle job"
    },
    {
      "permissionName": "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.put",
      "displayName": "Circulation storage - put tlr feature toggle job",
      "description": "Update tlr feature toggle job"
    },
    {
      "permissionName": "tlr-feature-toggle-job-storage.tlr-feature-toggle-jobs.item.delete",
      "displayName": "Circulation storage - delete tlr feature toggle job",
      "description": "Delete tlr feature toggle job"
    },
    {
      "permissionName": "actual-cost-record-storage.actual-cost-records.item.post",
      "displayName": "Circulation storage - post actual cost record",
      "description": "Create actual cost record"
    },
    {
      "permissionName": "actual-cost-record-storage.actual-cost-records.collection.get",
      "displayName": "Circulation storage - get actual cost record collection",
      "description": "Get actual cost record collection"
    },
    {
      "permissionName": "actual-cost-record-storage.actual-cost-records.item.get",
      "displayName": "Circulation storage - get actual cost record",
      "description": "Get actual cost record"
    },
    {
      "permissionName": "actual-cost-record-storage.actual-cost-records.item.put",
      "displayName": "Circulation storage - put actual cost record",
      "description": "Update actual cost record"
    },
    {
      "permissionName": "actual-cost-record-storage.actual-cost-records.item.delete",
      "displayName": "Circulation storage - delete actual cost record",
      "description": "Delete actual cost record"
    },
    {
      "permissionName": "checkout-lock-storage.checkout-locks.item.post",
      "displayName": "Circulation storage - create lock",
      "description": "create lock for the userId"
    },
    {
      "permissionName": "checkout-lock-storage.checkout-locks.item.delete",
      "displayName": "Circulation storage - delete lock",
      "description": "Delete lock for the userId"
    },
    {
      "permissionName": "checkout-lock-storage.checkout-locks.item.get",
      "displayName": "Circulation storage - get lock",
      "description": "get lock for the userId"
    },
    {
      "permissionName": "checkout-lock-storage.checkout-locks.collection.get",
      "displayName": "Circulation storage - get locks",
      "description": "get locks"
    }
  ],
  "launchDescriptor": {
    "dockerImage": "${artifactId}:${version}",
    "dockerPull": false,
    "dockerArgs": {
      "HostConfig": {
        "Memory": 536870912,
        "PortBindings": { "8081/tcp": [ { "HostPort": "%p" } ] }
      }
    },
    "env": [
      { "name": "JAVA_OPTIONS",
        "value": "-XX:MaxRAMPercentage=66.0"
      },
      { "name": "DB_HOST", "value": "postgres" },
      { "name": "DB_PORT", "value": "5432" },
      { "name": "DB_USERNAME", "value": "folio_admin" },
      { "name": "DB_PASSWORD", "value": "folio_admin" },
      { "name": "DB_DATABASE", "value": "okapi_modules" },
      { "name": "DB_QUERYTIMEOUT", "value": "60000" },
      { "name": "DB_CHARSET", "value": "UTF-8" },
      { "name": "DB_MAXPOOLSIZE", "value": "5" },
      { "name": "KAFKA_HOST", "value": "kafka" },
      { "name": "KAFKA_PORT", "value": "9092" },
      { "name": "REPLICATION_FACTOR", "value": "1" },
      { "name": "ENV", "value": "folio" }
    ]
  }
}
